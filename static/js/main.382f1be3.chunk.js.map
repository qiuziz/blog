{"version":3,"sources":["service/fetchapi.tsx","service/resource.tsx","components/loading/index.tsx","components/loading/index.scss","components/post/index.scss","utils/helper.ts","components/post/index.tsx","router/index.tsx","pages/home/index.tsx","pages/article/index.tsx","reportWebVitals.ts","index.tsx"],"names":["fetchMethod","_url","_config","a","fetch","response","ok","Error","statusText","result","json","matchUrlSearchParams","url","urlSearchParams","replace","u","URLSearchParams","Object","keys","reduce","pre","next","includes","constructor","Array","forEach","value","append","toString","FetchApi","headers","get","config","post","bodyParams","method","body","JSON","stringify","upload","delete","put","patch","this","fetchResource","Resource","issues","dailyWallpaper","randomWallpaper","Loading","props","className","zoom","style","dateFormat","date","format","args","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","i","test","RegExp","$1","getFullYear","substr","length","n","Post","data","onClick","onPostClick","map","key","id","href","number","title","Date","updated_at","slice","prefix","window","__POWERED_BY_QIANKUN__","routes","path","Component","useState","postList","setPostList","hasMore","setHasMore","pageStart","loadMore","page","console","log","per_page","then","res","loader","exact","noNav","search","location","split","queryString","parse","getUrlParams","setData","getArticle","useCallback","document","useEffect","Fragment","source","App","index","render","History","to","RouteConfig","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","container","ReactDOM","querySelector","storeTest","onGlobalStateChange","prev","name","setGlobalState","ignore","user","bootstrap","mount","unmount","unmountComponentAtNode","__webpack_public_path__","__INJECTED_PUBLIC_PATH_BY_QIANKUN__"],"mappings":"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","file":"static/js/main.382f1be3.chunk.js","sourcesContent":["/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date: 2018-11-02 14:38:52\n * @Last Modified by: qiuz\n * @Last Modified time: 2019-12-31 11:34:28\n */\n\nimport 'whatwg-fetch';\n\ninterface ConfigType {\n\tloadingDelay?: number;\n\tdes?: boolean;\n\t[propName: string]: any;\n}\n\nconst fetchMethod = async (_url: string, _config: any) => {\n\ttry {\n\t\tconst response = await fetch(_url, _config);\n\t\tif (!response.ok) {\n\t\t\tthrow Error(response.statusText);\n\t\t}\n\t\tlet result: any = {};\n\t\ttry {\n\t\t\tresult = await response.json();\n\t\t} catch (error) {\n\t\t\tresult = {};\n\t\t}\n\t\treturn result;\n\t}\n\tcatch (err) {\n\t\tthrow err;\n\t}\n};\n\nconst matchUrlSearchParams = (url: string, urlSearchParams: any) => {\n\tif (!urlSearchParams) {\n\t\treturn url.replace(/\\/:[^?]+/g, '');\n\t}\n\tconst u = new URLSearchParams();\n\t// tslint:disable-next-line:variable-name\n\tlet _url = Object.keys(urlSearchParams).reduce((pre, next) => {\n\t\tif (pre.includes(':' + next)) {\n\t\t\treturn pre.replace(':' + next, urlSearchParams[next]);\n\t\t} else {\n\t\t\tif (urlSearchParams[next] && urlSearchParams[next].constructor === Array) {\n\t\t\t\turlSearchParams[next].forEach((value: any) => {\n\t\t\t\t\tu.append(next, value);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tu.append(next, urlSearchParams[next]);\n\t\t\t}\n\t\t\treturn pre;\n\t\t}\n\t}, url);\n\t_url = _url.replace(/\\/:[^?]+/g, '');\n\treturn _url + (u.toString() === '' ? '' : '?' + u);\n};\n\nclass FetchApi {\n\n\theaders: any = {};\n\turl = '';\n\t// tslint:disable-next-line:variable-name\n\tconstructor(_url: string) {\n\t\tthis.url = _url;\n\t\tthis.headers['Content-Type'] = 'application/json;charset=UTF-8';\n\t}\n\n\tget = (urlSearchParams: object, config?: ConfigType) => {\n\t\treturn fetchMethod(matchUrlSearchParams(this.url, urlSearchParams), config);\n\t}\n\n\tpost = (urlSearchParams?: object, bodyParams?: any, config?: ConfigType) => {\n\t\treturn fetchMethod(matchUrlSearchParams(this.url, urlSearchParams),\n\t\t\t{ ...config,\n\t\t\t\t method: 'POST',\n\t\t\t\t body: JSON.stringify(bodyParams)}\n\t\t);\n\t}\n\n\tupload = (urlSearchParams: object, bodyParams: FormData) => {\n\t\treturn fetchMethod(matchUrlSearchParams(this.url, urlSearchParams),\n\t\t\t{\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: bodyParams\n\t\t\t}\n\t\t);\n\t}\n\n\tdelete = (urlSearchParams: object, config = { headers: this.headers }) => {\n\t\treturn fetchMethod(matchUrlSearchParams(this.url, urlSearchParams),\n\t\t\t{...config,\n\t\t\t\tmethod: 'DELETE'}\n\t\t);\n\t}\n\n\tput = (urlSearchParams: object, bodyParams: object, config = { headers: this.headers }) => {\n\t\treturn fetchMethod(matchUrlSearchParams(this.url, urlSearchParams),\n\t\t\t{ ...config, headers: this.headers,\n\t\t\t\t method: 'PUT',\n\t\t\t\t body: JSON.stringify(bodyParams)}\n\t\t);\n\t}\n\n\tpatch = (urlSearchParams: object, bodyParams: object, config = { headers: this.headers }) => {\n\t\treturn fetchMethod(matchUrlSearchParams(this.url, urlSearchParams),\n\t\t\t{...config,\n\t\t\t\tmethod: 'PATCH',\n\t\t\t\tbody: JSON.stringify(bodyParams)}\n\t\t);\n\t}\n}\n\nconst fetchResource = (url: string) => {\n\treturn new FetchApi(url);\n};\n\nexport { fetchResource };\n","/*\n * @Author: qiuz\n * @Date: 2018-05-24 19:24:46\n * */\n\nimport { fetchResource } from './fetchapi';\nconst API_HOST = 'https://api.github.com';\nconst SERVICE_NAME = '/repos/qiuziz/qiuziz.github.io';\n\nexport const Resource = {\n\t/**\n\t * 获取token\n\t */\n\tissues: fetchResource(`${API_HOST}${SERVICE_NAME}/issues/:number`),\n\t// dailyWallpaper: fetchResource(`https://www.bing.com/HPImageArchive.aspx`),\n\tdailyWallpaper: fetchResource(`https://jsonp.afeld.me/?url=http%3A%2F%2Fcn.bing.com%2FHPImageArchive.aspx%3Fformat%3Djs%26idx%3D0%26n%3D1`),\n\trandomWallpaper: fetchResource(`https://jsonp.afeld.me/?url=http://pic.tsmp4.net/api/yingshi/img.php`),\n};\n","/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date: 2019-11-07 15:36:30\n * @Last Modified by: qiuz\n * @Last Modified time: 2019-12-31 17:57:10\n */\n\nimport React from 'react';\nimport './index.scss';\n\ninterface Props {\n\tclassName?: string;\n\tzoom?: number\n}\n\nexport const Loading = (props:Props) => {\n\tconst { className = '', zoom } = props;\n\treturn (\n\t\t<div className={`loading__box ${className}`}>\n\t\t\t<div className=\"loading__box-lds\" style={{zoom: zoom}}>\n\t\t\t\t\t<div /><div /><div />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","export default __webpack_public_path__ + \"static/media/index.7d4ed274.scss\";","export default __webpack_public_path__ + \"static/media/index.5bfdd7b8.scss\";","/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date:  2021-01-29 10:46:45\n * @Last Modified by: qiuz\n */\n\nimport queryString from 'qs';\n\n/**\n * @description 时间对象格式化\n * @param date\n * @param format\n */\nexport const dateFormat = (date: Date, format: string = 'yyyy-MM-dd hh:mm:ss'): string => {\n\tif (!date) return '';\n\tlet args = {\n\t\t'M+': date.getMonth() + 1,\n\t\t'd+': date.getDate(),\n\t\t'h+': date.getHours(),\n\t\t'm+': date.getMinutes(),\n\t\t's+': date.getSeconds(),\n\t\t'q+': Math.floor((date.getMonth() + 3) / 3), // quarter\n\t\t'S': date.getMilliseconds()\n\t};\n\tif (/(y+)/.test(format)) { format = format.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length)); }\n\tfor (let i in args) {\n\t\t// @ts-ignore\n\t\tlet n = args[i];\n\t\tif (new RegExp('(' + i + ')').test(format)) { format = format.replace(RegExp.$1, RegExp.$1.length === 1 ? n : ('00' + n).substr(('' + n).length)); }\n\t}\n\treturn format;\n}\n\n\n\n/**\n * @description 获取当前url参数\n * @returns object\n */\nexport const getUrlParams = (): any => {\n\tconst search = window.location.href.split('?')[1];\n\treturn queryString.parse(search);\n}\n","/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date: 2019-10-31 20:39:25\n * @Last Modified by: qiuz\n * @Last Modified time: 2021-01-29 10:48:08\n */\n\nimport React from 'react';\nimport './index.scss';\nimport { dateFormat } from 'utils';\n\ninterface PropsType {\n\tdata: any[];\n\tonClick?: (...args: any) => void;\n}\n\nexport const Post = (props: PropsType) => {\n\tconst { data, onClick = () => {} } = props;\n\n\tconst onPostClick = (data: any) => () => {\n\t\tonClick(data);\n\t};\n\n\treturn (\n\t\t<div className=\"post-container\">\n\t\t\t{\n\t\t\t\tdata.map((post: any) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={post.id} className=\"post__content\" onClick={onPostClick(post)}>\n\t\t\t\t\t\t\t<h2 className=\"title\"><a href={`/article?number=${post.number}`}>{post.title}</a></h2>\n\t\t\t\t\t\t\t<p className=\"publish-time\">{dateFormat(new Date(post.updated_at))} by <a href=\"https://github.com/qiuziz\">qiuz</a></p>\n\t\t\t\t\t\t\t<p className=\"intro\"><a href={`/article?number=${post.number}`}>{post.body.slice(0, 200)}...</a></p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n}\n\n","/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date: 2019-11-07 16:03:31\n * @Last Modified by: qiuz\n * @Last Modified time: 2021-01-29 10:52:32\n */\n\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home, Article } from 'pages';\n\nconst prefix = (window as any).__POWERED_BY_QIANKUN__ ? '/widget' : '';\n\nexport const routes = [\n  {\n    path: '/',\n    Component: Home,\n    exact: true,\n    title: '首页',\n    noNav: true\n  },\n  {\n    path: '/article',\n    Component: Article,\n    exact: true,\n    title: '',\n    noNav: true\n  }\n];\n\nconst App = () => {\n  return (\n    <Switch>\n      {routes.map(({ path, Component, exact }: any, index) => {\n        return (\n          <Route\n            key={index}\n            path={`${prefix}${path}`}\n            exact={exact}\n            render={(props) => <Component {...props} History={History} />}\n          />\n        );\n      })}\n       <Redirect to={`${prefix}/blog`} />\n    </Switch>\n  );\n};\n\nexport default class RouteConfig extends React.Component<any, any> {\n  render() {\n    return (\n      <Router>\n        <App />\n      </Router>\n    );\n  }\n}\n","/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date: 2019-10-31 20:39:25\n * @Last Modified by: qiuz\n * @Last Modified time: 2021-01-29 11:01:46\n */\n\nimport React, { useState } from 'react';\nimport './index.less';\nimport { Resource } from 'service';\nimport { Post, Loading } from 'components';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nexport const Home = () => {\n\tconst [postList, setPostList] = useState<any[]>([]);\n\tconst [hasMore, setHasMore] = useState(true);\n\tconst getPosts = (page = 1) => {\n\t\tconsole.log(page);\n\t\tif (!hasMore) return;\n\t\tResource.issues.get({ per_page: '10', page })\n\t\t\t.then((res: any) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tsetPostList([...postList, ...res]);\n\t\t\t\tsetHasMore(res.length >= 5);\n\t\t\t});\n\t}\n\tconst style = postList.length <= 0\n\t? {\n\t\t\tclassName: 'fixed'\n\t\t}\n\t: {\n\t\t\tzoom: 0.2\n\t\t};\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t<InfiniteScroll\n\t\t\t\tpageStart={0}\n\t\t\t\tloadMore={getPosts}\n\t\t\t\thasMore={hasMore}\n\t\t\t\tloader={<Loading key={0} {...style} />}\n\t\t\t>\n\t\t\t\t<Post data={postList} />\n\t\t\t</InfiniteScroll>\n\t\t</div>\n\t);\n}\n\n","/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date: 2019-10-31 20:39:25\n * @Last Modified by: qiuz\n * @Last Modified time: 2021-01-29 11:02:31\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './index.less';\nimport { Resource } from 'service';\nimport { getUrlParams, dateFormat } from 'utils';\nimport Markdown from 'react-markdown';\nimport { Loading } from 'components';\n\ninterface PropsType {\n\tHistory: any;\n\tlocation: any;\n\thistory: any;\n}\n\nexport const Article = (props: PropsType) => {\n\tconst { number } = getUrlParams();\n\tconst [data, setData] = useState({} as any);\n\tconst getArticle = useCallback(() => {\n\t\tResource.issues.get({ number })\n\t\t\t.then((res: any) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tdocument.title = res.title;\n\t\t\t\tsetData(res);\n\t\t\t});\n\t}, [number]);\n\n\tuseEffect(() => {\n\t\tgetArticle();\n\t}, [getArticle]);\n\n\treturn (\n\t\t<div className=\"article content\">\n\t\t\t{\n\t\t\t\tdata.title\n\t\t\t\t\t? <React.Fragment>\n\t\t\t\t\t\t<h2>{data.title}</h2>\n\t\t\t\t\t\t<p className=\"publish-time\">{data.updated_at && dateFormat(new Date(data.updated_at))} by <a href=\"https://github.com/qiuziz\">qiuz</a></p>\n\t\t\t\t\t\t<Markdown source={data.body} />\n\t\t\t\t\t\t<p className=\"commit\">\n\t\t\t\t\t\t\t<label><a href={`https://github.com/qiuziz/qiuziz.github.io/issues/${number}`}>去评论</a></label>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t: <Loading className=\"fixed\" />\n\t\t\t}\n\t\t</div>\n\t);\n}\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport Router from './router';\nimport reportWebVitals from './reportWebVitals';\n\ndeclare const window: any;\ndeclare let __webpack_public_path__: any;\n\nlet prefix = '';\n\n/**\n * @see https://qiankun.umijs.org/zh/faq#a-%E4%BD%BF%E7%94%A8-webpack-%E8%BF%90%E8%A1%8C%E6%97%B6-publicpath-%E9%85%8D%E7%BD%AE\n * runtime publicPath 主要解决的是微应用动态载入的 脚本、样式、图片 等地址不正确的问题。\n */\nif (window.__POWERED_BY_QIANKUN__) {\n\tprefix = '/widget';\n  // eslint-disable-next-line no-unused-vars\n  __webpack_public_path__ = window.__INJECTED_PUBLIC_PATH_BY_QIANKUN__;\n}\n\nfunction render(props: any) {\n  const { container } = props;\n  ReactDOM.render(<Router prefix={prefix} />, (container || document).querySelector('#root'));\n}\n\nfunction storeTest(props: any) {\n  props.onGlobalStateChange(\n    (value: any, prev: any) => console.log(`[onGlobalStateChange - ${props.name}]:`, value, prev),\n    true\n  );\n  props.setGlobalState({\n    ignore: props.name,\n    user: {\n      name: props.name\n    }\n  });\n}\n\n// @ts-ignore\nif (!window.__POWERED_BY_QIANKUN__) {\n  render({});\n}\n\nexport async function bootstrap() {\n  console.log('[subapp] react app bootstraped');\n}\n\nexport async function mount(props: any) {\n  console.log('[subapp] props from main framework', props);\n  storeTest(props);\n  render(props);\n}\n\nexport async function unmount(props: any) {\n  const { container } = props;\n  ReactDOM.unmountComponentAtNode((container || document).querySelector('#root'));\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}